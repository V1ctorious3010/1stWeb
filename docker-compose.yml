version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - asset-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - asset-network

  # Kafka & Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - asset-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - asset-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - CUSTOMER_SERVICE_URL=http://customer-service:8001
      - ASSET_SERVICE_URL=http://asset-service:8002
      - MARKET_DATA_SERVICE_URL=http://market-data-service:8003
      - AI_SERVICE_URL=http://ai-recommendation-service:8004
    depends_on:
      - customer-service
      - asset-service
      - market-data-service
      - ai-recommendation-service
    networks:
      - asset-network

  # Customer Service
  customer-service:
    build: ./customer-service
    container_name: customer-service
    restart: always
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/customer?authSource=admin
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - asset-network

  # Asset Service
  asset-service:
    build: ./asset-service
    container_name: asset-service
    restart: always
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/asset?authSource=admin
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka
    networks:
      - asset-network

  # Market Data Service
  market-data-service:
    build: ./market-data-service
    container_name: market-data-service
    restart: always
    ports:
      - "8003:8003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/market?authSource=admin
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka
    networks:
      - asset-network

  # AI Recommendation Service
  ai-recommendation-service:
    build: ./ai-recommendation-service
    container_name: ai-recommendation-service
    restart: always
    ports:
      - "8004:8004"
    environment:
      - ASSET_SERVICE_URL=http://asset-service:8002
      - MARKET_DATA_SERVICE_URL=http://market-data-service:8003
    depends_on:
      - asset-service
      - market-data-service
    networks:
      - asset-network

  # Frontend
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api-gateway
    networks:
      - asset-network

volumes:
  mongodb_data:

networks:
  asset-network:
    driver: bridge 